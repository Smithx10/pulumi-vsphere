"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * The `vsphere_virtual_machine` resource can be used to manage the complex
 * lifecycle of a virtual machine. It supports management of disk, network
 * interface, and CDROM devices, creation from scratch or cloning from template,
 * and migration through both host and storage vMotion.
 *
 * For more details on working with virtual machines in vSphere, see [this
 * page][vmware-docs-vm-management].
 *
 * [vmware-docs-vm-management]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vm_admin.doc/GUID-55238059-912E-411F-A0E9-A7A536972A91.html
 */
class VirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new VirtualMachine(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["alternateGuestName"] = state ? state.alternateGuestName : undefined;
            inputs["annotation"] = state ? state.annotation : undefined;
            inputs["bootDelay"] = state ? state.bootDelay : undefined;
            inputs["bootRetryDelay"] = state ? state.bootRetryDelay : undefined;
            inputs["bootRetryEnabled"] = state ? state.bootRetryEnabled : undefined;
            inputs["cdrom"] = state ? state.cdrom : undefined;
            inputs["changeVersion"] = state ? state.changeVersion : undefined;
            inputs["clone"] = state ? state.clone : undefined;
            inputs["cpuHotAddEnabled"] = state ? state.cpuHotAddEnabled : undefined;
            inputs["cpuHotRemoveEnabled"] = state ? state.cpuHotRemoveEnabled : undefined;
            inputs["cpuLimit"] = state ? state.cpuLimit : undefined;
            inputs["cpuPerformanceCountersEnabled"] = state ? state.cpuPerformanceCountersEnabled : undefined;
            inputs["cpuReservation"] = state ? state.cpuReservation : undefined;
            inputs["cpuShareCount"] = state ? state.cpuShareCount : undefined;
            inputs["cpuShareLevel"] = state ? state.cpuShareLevel : undefined;
            inputs["customAttributes"] = state ? state.customAttributes : undefined;
            inputs["datastoreClusterId"] = state ? state.datastoreClusterId : undefined;
            inputs["datastoreId"] = state ? state.datastoreId : undefined;
            inputs["defaultIpAddress"] = state ? state.defaultIpAddress : undefined;
            inputs["disks"] = state ? state.disks : undefined;
            inputs["efiSecureBootEnabled"] = state ? state.efiSecureBootEnabled : undefined;
            inputs["enableDiskUuid"] = state ? state.enableDiskUuid : undefined;
            inputs["enableLogging"] = state ? state.enableLogging : undefined;
            inputs["eptRviMode"] = state ? state.eptRviMode : undefined;
            inputs["extraConfig"] = state ? state.extraConfig : undefined;
            inputs["firmware"] = state ? state.firmware : undefined;
            inputs["folder"] = state ? state.folder : undefined;
            inputs["forcePowerOff"] = state ? state.forcePowerOff : undefined;
            inputs["guestId"] = state ? state.guestId : undefined;
            inputs["guestIpAddresses"] = state ? state.guestIpAddresses : undefined;
            inputs["hostSystemId"] = state ? state.hostSystemId : undefined;
            inputs["hvMode"] = state ? state.hvMode : undefined;
            inputs["imported"] = state ? state.imported : undefined;
            inputs["latencySensitivity"] = state ? state.latencySensitivity : undefined;
            inputs["memory"] = state ? state.memory : undefined;
            inputs["memoryHotAddEnabled"] = state ? state.memoryHotAddEnabled : undefined;
            inputs["memoryLimit"] = state ? state.memoryLimit : undefined;
            inputs["memoryReservation"] = state ? state.memoryReservation : undefined;
            inputs["memoryShareCount"] = state ? state.memoryShareCount : undefined;
            inputs["memoryShareLevel"] = state ? state.memoryShareLevel : undefined;
            inputs["migrateWaitTimeout"] = state ? state.migrateWaitTimeout : undefined;
            inputs["moid"] = state ? state.moid : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["nestedHvEnabled"] = state ? state.nestedHvEnabled : undefined;
            inputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            inputs["numCoresPerSocket"] = state ? state.numCoresPerSocket : undefined;
            inputs["numCpus"] = state ? state.numCpus : undefined;
            inputs["rebootRequired"] = state ? state.rebootRequired : undefined;
            inputs["resourcePoolId"] = state ? state.resourcePoolId : undefined;
            inputs["runToolsScriptsAfterPowerOn"] = state ? state.runToolsScriptsAfterPowerOn : undefined;
            inputs["runToolsScriptsAfterResume"] = state ? state.runToolsScriptsAfterResume : undefined;
            inputs["runToolsScriptsBeforeGuestReboot"] = state ? state.runToolsScriptsBeforeGuestReboot : undefined;
            inputs["runToolsScriptsBeforeGuestShutdown"] = state ? state.runToolsScriptsBeforeGuestShutdown : undefined;
            inputs["runToolsScriptsBeforeGuestStandby"] = state ? state.runToolsScriptsBeforeGuestStandby : undefined;
            inputs["scsiBusSharing"] = state ? state.scsiBusSharing : undefined;
            inputs["scsiControllerCount"] = state ? state.scsiControllerCount : undefined;
            inputs["scsiType"] = state ? state.scsiType : undefined;
            inputs["shutdownWaitTimeout"] = state ? state.shutdownWaitTimeout : undefined;
            inputs["swapPlacementPolicy"] = state ? state.swapPlacementPolicy : undefined;
            inputs["syncTimeWithHost"] = state ? state.syncTimeWithHost : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["uuid"] = state ? state.uuid : undefined;
            inputs["vapp"] = state ? state.vapp : undefined;
            inputs["vappTransports"] = state ? state.vappTransports : undefined;
            inputs["vmwareToolsStatus"] = state ? state.vmwareToolsStatus : undefined;
            inputs["vmxPath"] = state ? state.vmxPath : undefined;
            inputs["waitForGuestNetRoutable"] = state ? state.waitForGuestNetRoutable : undefined;
            inputs["waitForGuestNetTimeout"] = state ? state.waitForGuestNetTimeout : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.networkInterfaces === undefined) {
                throw new Error("Missing required property 'networkInterfaces'");
            }
            if (!args || args.resourcePoolId === undefined) {
                throw new Error("Missing required property 'resourcePoolId'");
            }
            inputs["alternateGuestName"] = args ? args.alternateGuestName : undefined;
            inputs["annotation"] = args ? args.annotation : undefined;
            inputs["bootDelay"] = args ? args.bootDelay : undefined;
            inputs["bootRetryDelay"] = args ? args.bootRetryDelay : undefined;
            inputs["bootRetryEnabled"] = args ? args.bootRetryEnabled : undefined;
            inputs["cdrom"] = args ? args.cdrom : undefined;
            inputs["clone"] = args ? args.clone : undefined;
            inputs["cpuHotAddEnabled"] = args ? args.cpuHotAddEnabled : undefined;
            inputs["cpuHotRemoveEnabled"] = args ? args.cpuHotRemoveEnabled : undefined;
            inputs["cpuLimit"] = args ? args.cpuLimit : undefined;
            inputs["cpuPerformanceCountersEnabled"] = args ? args.cpuPerformanceCountersEnabled : undefined;
            inputs["cpuReservation"] = args ? args.cpuReservation : undefined;
            inputs["cpuShareCount"] = args ? args.cpuShareCount : undefined;
            inputs["cpuShareLevel"] = args ? args.cpuShareLevel : undefined;
            inputs["customAttributes"] = args ? args.customAttributes : undefined;
            inputs["datastoreClusterId"] = args ? args.datastoreClusterId : undefined;
            inputs["datastoreId"] = args ? args.datastoreId : undefined;
            inputs["disks"] = args ? args.disks : undefined;
            inputs["efiSecureBootEnabled"] = args ? args.efiSecureBootEnabled : undefined;
            inputs["enableDiskUuid"] = args ? args.enableDiskUuid : undefined;
            inputs["enableLogging"] = args ? args.enableLogging : undefined;
            inputs["eptRviMode"] = args ? args.eptRviMode : undefined;
            inputs["extraConfig"] = args ? args.extraConfig : undefined;
            inputs["firmware"] = args ? args.firmware : undefined;
            inputs["folder"] = args ? args.folder : undefined;
            inputs["forcePowerOff"] = args ? args.forcePowerOff : undefined;
            inputs["guestId"] = args ? args.guestId : undefined;
            inputs["hostSystemId"] = args ? args.hostSystemId : undefined;
            inputs["hvMode"] = args ? args.hvMode : undefined;
            inputs["latencySensitivity"] = args ? args.latencySensitivity : undefined;
            inputs["memory"] = args ? args.memory : undefined;
            inputs["memoryHotAddEnabled"] = args ? args.memoryHotAddEnabled : undefined;
            inputs["memoryLimit"] = args ? args.memoryLimit : undefined;
            inputs["memoryReservation"] = args ? args.memoryReservation : undefined;
            inputs["memoryShareCount"] = args ? args.memoryShareCount : undefined;
            inputs["memoryShareLevel"] = args ? args.memoryShareLevel : undefined;
            inputs["migrateWaitTimeout"] = args ? args.migrateWaitTimeout : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["nestedHvEnabled"] = args ? args.nestedHvEnabled : undefined;
            inputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            inputs["numCoresPerSocket"] = args ? args.numCoresPerSocket : undefined;
            inputs["numCpus"] = args ? args.numCpus : undefined;
            inputs["resourcePoolId"] = args ? args.resourcePoolId : undefined;
            inputs["runToolsScriptsAfterPowerOn"] = args ? args.runToolsScriptsAfterPowerOn : undefined;
            inputs["runToolsScriptsAfterResume"] = args ? args.runToolsScriptsAfterResume : undefined;
            inputs["runToolsScriptsBeforeGuestReboot"] = args ? args.runToolsScriptsBeforeGuestReboot : undefined;
            inputs["runToolsScriptsBeforeGuestShutdown"] = args ? args.runToolsScriptsBeforeGuestShutdown : undefined;
            inputs["runToolsScriptsBeforeGuestStandby"] = args ? args.runToolsScriptsBeforeGuestStandby : undefined;
            inputs["scsiBusSharing"] = args ? args.scsiBusSharing : undefined;
            inputs["scsiControllerCount"] = args ? args.scsiControllerCount : undefined;
            inputs["scsiType"] = args ? args.scsiType : undefined;
            inputs["shutdownWaitTimeout"] = args ? args.shutdownWaitTimeout : undefined;
            inputs["swapPlacementPolicy"] = args ? args.swapPlacementPolicy : undefined;
            inputs["syncTimeWithHost"] = args ? args.syncTimeWithHost : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vapp"] = args ? args.vapp : undefined;
            inputs["waitForGuestNetRoutable"] = args ? args.waitForGuestNetRoutable : undefined;
            inputs["waitForGuestNetTimeout"] = args ? args.waitForGuestNetTimeout : undefined;
            inputs["changeVersion"] = undefined /*out*/;
            inputs["defaultIpAddress"] = undefined /*out*/;
            inputs["guestIpAddresses"] = undefined /*out*/;
            inputs["imported"] = undefined /*out*/;
            inputs["moid"] = undefined /*out*/;
            inputs["rebootRequired"] = undefined /*out*/;
            inputs["uuid"] = undefined /*out*/;
            inputs["vappTransports"] = undefined /*out*/;
            inputs["vmwareToolsStatus"] = undefined /*out*/;
            inputs["vmxPath"] = undefined /*out*/;
        }
        super("vsphere:index/virtualMachine:VirtualMachine", name, inputs, opts);
    }
}
exports.VirtualMachine = VirtualMachine;
//# sourceMappingURL=virtualMachine.js.map