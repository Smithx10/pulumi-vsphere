"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * The `vsphere_ha_vm_override` resource can be used to add an override for
 * vSphere HA settings on a cluster for a specific virtual machine. With this
 * resource, one can control specific HA settings so that they are different than
 * the cluster default, accommodating the needs of that specific virtual machine,
 * while not affecting the rest of the cluster.
 *
 * For more information on vSphere HA, see [this page][ref-vsphere-ha-clusters].
 *
 * [ref-vsphere-ha-clusters]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-5432CA24-14F1-44E3-87FB-61D937831CF6.html
 *
 * ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi
 * connections.
 */
class HaVmOverride extends pulumi.CustomResource {
    /**
     * Get an existing HaVmOverride resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new HaVmOverride(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["computeClusterId"] = state ? state.computeClusterId : undefined;
            inputs["haDatastoreApdRecoveryAction"] = state ? state.haDatastoreApdRecoveryAction : undefined;
            inputs["haDatastoreApdResponse"] = state ? state.haDatastoreApdResponse : undefined;
            inputs["haDatastoreApdResponseDelay"] = state ? state.haDatastoreApdResponseDelay : undefined;
            inputs["haDatastorePdlResponse"] = state ? state.haDatastorePdlResponse : undefined;
            inputs["haHostIsolationResponse"] = state ? state.haHostIsolationResponse : undefined;
            inputs["haVmFailureInterval"] = state ? state.haVmFailureInterval : undefined;
            inputs["haVmMaximumFailureWindow"] = state ? state.haVmMaximumFailureWindow : undefined;
            inputs["haVmMaximumResets"] = state ? state.haVmMaximumResets : undefined;
            inputs["haVmMinimumUptime"] = state ? state.haVmMinimumUptime : undefined;
            inputs["haVmMonitoring"] = state ? state.haVmMonitoring : undefined;
            inputs["haVmMonitoringUseClusterDefaults"] = state ? state.haVmMonitoringUseClusterDefaults : undefined;
            inputs["haVmRestartPriority"] = state ? state.haVmRestartPriority : undefined;
            inputs["haVmRestartTimeout"] = state ? state.haVmRestartTimeout : undefined;
            inputs["virtualMachineId"] = state ? state.virtualMachineId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.computeClusterId === undefined) {
                throw new Error("Missing required property 'computeClusterId'");
            }
            if (!args || args.virtualMachineId === undefined) {
                throw new Error("Missing required property 'virtualMachineId'");
            }
            inputs["computeClusterId"] = args ? args.computeClusterId : undefined;
            inputs["haDatastoreApdRecoveryAction"] = args ? args.haDatastoreApdRecoveryAction : undefined;
            inputs["haDatastoreApdResponse"] = args ? args.haDatastoreApdResponse : undefined;
            inputs["haDatastoreApdResponseDelay"] = args ? args.haDatastoreApdResponseDelay : undefined;
            inputs["haDatastorePdlResponse"] = args ? args.haDatastorePdlResponse : undefined;
            inputs["haHostIsolationResponse"] = args ? args.haHostIsolationResponse : undefined;
            inputs["haVmFailureInterval"] = args ? args.haVmFailureInterval : undefined;
            inputs["haVmMaximumFailureWindow"] = args ? args.haVmMaximumFailureWindow : undefined;
            inputs["haVmMaximumResets"] = args ? args.haVmMaximumResets : undefined;
            inputs["haVmMinimumUptime"] = args ? args.haVmMinimumUptime : undefined;
            inputs["haVmMonitoring"] = args ? args.haVmMonitoring : undefined;
            inputs["haVmMonitoringUseClusterDefaults"] = args ? args.haVmMonitoringUseClusterDefaults : undefined;
            inputs["haVmRestartPriority"] = args ? args.haVmRestartPriority : undefined;
            inputs["haVmRestartTimeout"] = args ? args.haVmRestartTimeout : undefined;
            inputs["virtualMachineId"] = args ? args.virtualMachineId : undefined;
        }
        super("vsphere:index/haVmOverride:HaVmOverride", name, inputs, opts);
    }
}
exports.HaVmOverride = HaVmOverride;
//# sourceMappingURL=haVmOverride.js.map