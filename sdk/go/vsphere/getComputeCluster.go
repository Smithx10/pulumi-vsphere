// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The `vsphere_compute_cluster` data source can be used to discover the ID of a
// cluster in vSphere. This is useful to fetch the ID of a cluster that you want
// to use for virtual machine placement via the
// [`vsphere_virtual_machine`][docs-virtual-machine-resource] resource, allowing
// you to specify the cluster's root resource pool directly versus using the alias
// available through the [`vsphere_resource_pool`][docs-resource-pool-data-source]
// data source.
// 
// [docs-virtual-machine-resource]: /docs/providers/vsphere/r/virtual_machine.html
// [docs-resource-pool-data-source]: /docs/providers/vsphere/d/resource_pool.html
// 
// -> You may also wish to see the
// [`vsphere_compute_cluster`][docs-compute-cluster-resource] resource for further
// details about clusters or how to work with them in Terraform.
// 
// [docs-compute-cluster-resource]: /docs/providers/vsphere/r/compute_cluster.html
func LookupComputeCluster(ctx *pulumi.Context, args *GetComputeClusterArgs) (*GetComputeClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["datacenterId"] = args.DatacenterId
		inputs["name"] = args.Name
	}
	outputs, err := ctx.Invoke("vsphere:index/getComputeCluster:getComputeCluster", inputs)
	if err != nil {
		return nil, err
	}
	return &GetComputeClusterResult{
		ResourcePoolId: outputs["resourcePoolId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getComputeCluster.
type GetComputeClusterArgs struct {
	// The [managed object reference
	// ID][docs-about-morefs] of the datacenter the cluster is located in.  This can
	// be omitted if the search path used in `name` is an absolute path.  For
	// default datacenters, use the id attribute from an empty `vsphere_datacenter`
	// data source.
	DatacenterId interface{}
	// The name or absolute path to the cluster.
	Name interface{}
}

// A collection of values returned by getComputeCluster.
type GetComputeClusterResult struct {
	ResourcePoolId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
