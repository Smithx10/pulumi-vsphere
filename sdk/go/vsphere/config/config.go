// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"github.com/pulumi/pulumi/sdk/go/pulumi/config"
)

// If set, VMware vSphere client will permit unverifiable SSL certificates.
func GetAllowUnverifiedSsl(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "vsphere:allowUnverifiedSsl")
}

// govmomi debug
func GetClientDebug(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "vsphere:clientDebug")
}

// govmomi debug path for debug
func GetClientDebugPath(ctx *pulumi.Context) string {
	return config.Get(ctx, "vsphere:clientDebugPath")
}

// govmomi debug path for a single run
func GetClientDebugPathRun(ctx *pulumi.Context) string {
	return config.Get(ctx, "vsphere:clientDebugPathRun")
}

// The user password for vSphere API operations.
func GetPassword(ctx *pulumi.Context) string {
	return config.Require(ctx, "vsphere:password")
}

// Persist vSphere client sessions to disk
func GetPersistSession(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "vsphere:persistSession")
}

// The directory to save vSphere REST API sessions to
func GetRestSessionPath(ctx *pulumi.Context) string {
	return config.Get(ctx, "vsphere:restSessionPath")
}

// The user name for vSphere API operations.
func GetUser(ctx *pulumi.Context) string {
	return config.Require(ctx, "vsphere:user")
}

func GetVcenterServer(ctx *pulumi.Context) string {
	return config.Get(ctx, "vsphere:vcenterServer")
}

// The directory to save vSphere SOAP API sessions to
func GetVimSessionPath(ctx *pulumi.Context) string {
	return config.Get(ctx, "vsphere:vimSessionPath")
}

// The vSphere Server name for vSphere API operations.
func GetVsphereServer(ctx *pulumi.Context) string {
	return config.Get(ctx, "vsphere:vsphereServer")
}
